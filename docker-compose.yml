version: '3.8'

services:
  # Database Services
  postgres:
    image: postgres:15-alpine
    container_name: mtlverse_postgres
    environment:
      POSTGRES_DB: mtlverse
      POSTGRES_USER: mtlverse_user
      POSTGRES_PASSWORD: mtlverse_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - mtlverse_network

  redis:
    image: redis:7-alpine
    container_name: mtlverse_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - mtlverse_network

  # Message Queue
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: mtlverse_rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: mtlverse
      RABBITMQ_DEFAULT_PASS: mtlverse_password
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - mtlverse_network

  # Search Engine
  elasticsearch:
    image: elasticsearch:8.8.0
    container_name: mtlverse_elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - mtlverse_network

  # File Storage (Local Nginx)
  file-server:
    image: nginx:alpine
    container_name: mtlverse_file_server
    ports:
      - "8081:80"
    volumes:
      - file_storage:/usr/share/nginx/html/files
      - ./deployment/nginx/file-server.conf:/etc/nginx/conf.d/default.conf
    networks:
      - mtlverse_network

  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: mtlverse_backend
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - DATABASE_URL=jdbc:postgresql://postgres:5432/mtlverse
      - DATABASE_USERNAME=mtlverse_user
      - DATABASE_PASSWORD=mtlverse_password
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://mtlverse:mtlverse_password@rabbitmq:5672
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - FILE_STORAGE_URL=http://file-server:80
      - FILE_STORAGE_PATH=/usr/share/nginx/html/files
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
      - rabbitmq
      - elasticsearch
      - file-server
    networks:
      - mtlverse_network

  # ML Service
  ml-service:
    build:
      context: ./ml-services
      dockerfile: Dockerfile
    container_name: mtlverse_ml
    environment:
      - DATABASE_URL=postgresql://mtlverse_user:mtlverse_password@postgres:5432/mtlverse
      - REDIS_URL=redis://redis:6379
      - RABBITMQ_URL=amqp://mtlverse:mtlverse_password@rabbitmq:5672
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
      - rabbitmq
    networks:
      - mtlverse_network

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: mtlverse_frontend
    environment:
      - REACT_APP_API_URL=http://localhost:8080/api
      - REACT_APP_ML_SERVICE_URL=http://localhost:8000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - mtlverse_network

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:
  elasticsearch_data:
  file_storage:

networks:
  mtlverse_network:
    driver: bridge
